/*
-----------------------------------------------------------------------------
Filename:    HelloOgre5.h
-----------------------------------------------------------------------------

This source file is generated by the Ogre AppWizard.

Check out: http://conglomerate.berlios.de/wiki/doku.php?id=ogrewizards

Based on the Example Framework for OGRE
(Object-oriented Graphics Rendering Engine)

Copyright (c) 2000-2007 The OGRE Team
For the latest info, see http://www.ogre3d.org/

You may use this sample code for anything you like, it is not covered by the
LGPL like the rest of the OGRE engine.
-----------------------------------------------------------------------------
*/
#ifndef __HelloOgre5_h_
#define __HelloOgre5_h_


#include "ExampleApplication.h"
#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32

#endif




class KatTDApp : public ExampleApplication
{
public:
	KatTDApp()
	{}

	~KatTDApp()
	{}

protected:
	virtual void createCamera(void)
	{
      // Create the camera
      mCamera = mSceneMgr->createCamera("PlayerCam");

      // Position it at 500 in Z direction
      mCamera->setPosition(Vector3(0,0,80));
      // Look back along -Z
      mCamera->lookAt(Vector3(0,0,-300));
      mCamera->setNearClipDistance(5);
	}


    virtual bool configure(void)
    {
        // Show the configuration dialog and initialise the system
        // You can skip this and use root.restoreConfig() to load configuration
        // settings if you were sure there are valid ones saved in ogre.cfg
		if(mRoot->showConfigDialog())
        {
            // If returned true, user clicked OK so initialise
            // Here we choose to let the system create a default rendering window by passing 'true'
            mWindow = mRoot->initialise(true);
			// Let's add a nice window icon
#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
			HWND hwnd;
			mWindow->getCustomAttribute("WINDOW", (void*)&hwnd);
			LONG iconID   = (LONG)LoadIcon( GetModuleHandle(0), MAKEINTRESOURCE(IDI_APPICON) );
			SetClassLong( hwnd, GCL_HICON, iconID );
#endif
            return true;
        }
        else
        {
            return false;
        }
    }


	// Just override the mandatory create scene method
	virtual void createScene(void)
	{
	  Entity* robot = mSceneMgr->createEntity("RobotL", "robot.mesh");
	  SceneNode* lnode = mSceneMgr->getRootSceneNode()->createChildSceneNode("lnode");
	  
	  lnode->setPosition(-50, 0, 0);
	  lnode->attachObject(robot);

	  Entity* robot2 = mSceneMgr->createEntity("RobotR", "robot.mesh");
	  SceneNode* rnode = lnode->createChildSceneNode();
	  rnode->rotate(Ogre::Vector3(0, 1, 0), Ogre::Radian(Ogre::Degree(180)));
	  rnode->setPosition(50, 0, 0);
	  rnode->attachObject(robot2);

      // Set ambient light
      mSceneMgr->setAmbientLight(ColourValue(1.0, 0.5, 0.5));

      // Create a light
      Light* l = mSceneMgr->createLight("MainLight");
      l->setPosition(20,80,50);
	}

   // Create new frame listener
	void createFrameListener(void)
	{
		mFrameListener = new MainFrameListener(mSceneMgr, mWindow, mCamera);
		mRoot->addFrameListener(mFrameListener);
	}
};

#endif // #ifndef __HelloOgre5_h_